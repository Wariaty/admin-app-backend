name: Publish relese package to GitHub Packages

on:
  workflow_dispatch:

jobs:
  publish-relese:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"

    steps:
      - name: Configure git config
        run: |
          git config --global user.name 'Release Bot'
          git config --global user.email 'release-bot@users.noreply.github.com'

      - name: Checkout branch
        uses: actions/checkout@v3

      - name: setup java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Test and package release
        run: | 
          mvn -B -DremoveSnapshot validate
          mvn -B package

      - name: Extract artifact name
        run: echo 'release_version=${project.version}' | mvn -N -q -DforceStdout help:evaluate >> $GITHUB_ENV

      - name: Commit & tag
        env:
          version: ${{ env.release_version }}
        run: |
          git commit -am "Prepare release version $(version)"
          git tag $(version)

      - name: Push changes to repo
        run: git push --tags

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.release_version }}
          files: target/*.jar
          fail_on_unmatched_files: true
          body: > 
            '___
            Note: Source code attachments are left `empty` intentionally to avoid accidental leaks.
            Unfortunately GitHub does not allow removing them entirely, just yet.'

      - name: Prepare repo upcoming development
        run: | 
          mvn -B -DbumpMinor validate
          mvn -B test
          git commit -am "Prepare next version"
          git push


